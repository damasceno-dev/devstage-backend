name: Deploy to Private Amazon ECR

on:
  push:
    branches:
      - main  # Runs when pushing to the main branch

jobs:
  deploy:
    name: Build and Push to Private ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create .secrets file
        run: |
          echo "${{ secrets.ENCODED_SECRETS }}" | base64 -d > .secrets
          chmod 600 .secrets

      - name: Load Environment Variables Safely
        run: |
          # Load environment variables from .secrets
          export $(cat .secrets | xargs)
          # Persist AWS credentials for subsequent steps
          echo "AWS_REGION=${AWS_REGION}" >> $GITHUB_ENV
          echo "AWS_RESOURCES_CREATOR_ACCESS_KEY_ID=${AWS_RESOURCES_CREATOR_ACCESS_KEY_ID}" >> $GITHUB_ENV
          echo "AWS_RESOURCES_CREATOR_SECRET_ACCESS_KEY=${AWS_RESOURCES_CREATOR_SECRET_ACCESS_KEY}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Get short commit hash
        id: vars
        run: echo "SHORT_SHA=$(git rev-parse --short=7 HEAD)" >> $GITHUB_ENV

      - name: Debug AWS_REGION
        run: |
          echo "AWS_REGION is: '$AWS_REGION'"

      - name: Test AWS Login
        run: |
          aws configure set aws_access_key_id "${{ secrets.AWS_RESOURCES_CREATOR_ACCESS_KEY_ID }}"
          aws configure set aws_secret_access_key "${{ secrets.AWS_RESOURCES_CREATOR_SECRET_ACCESS_KEY }}"
          aws configure set region "${{ secrets.AWS_REGION }}"
          
          aws s3 ls  # Test if AWS CLI can list S3 buckets (checks authentication)

      - name: Retrieve AWS Account ID
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
          echo "ACCOUNT_ID=${ACCOUNT_ID}" >> $GITHUB_ENV

      - name: Log in to Amazon ECR
        run: |
          aws configure set default.region ${{ env.AWS_REGION }}
          aws configure set aws_access_key_id ${{ env.AWS_RESOURCES_CREATOR_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ env.AWS_RESOURCES_CREATOR_SECRET_ACCESS_KEY }}
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.AWS_ECR_URL }}

      - name: Build and Tag Docker Image
        run: |
          docker build -t ${{ env.AWS_ECR_URL }}:latest -t ${{ env.AWS_ECR_URL }}:${{ env.SHORT_SHA }} .

      - name: Push Docker Image to Private ECR
        run: |
          docker push ${{ env.AWS_ECR_URL }}:latest
          docker push ${{ env.AWS_ECR_URL }}:${{ env.SHORT_SHA }}

      - name: Verify Pushed Images
        run: |
          echo "Pushed images to ECR:"
          echo " - ${{ env.AWS_ECR_URL }}:latest"
          echo " - ${{ env.AWS_ECR_URL }}:${{ env.SHORT_SHA }}"